
# ggb_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E3BAC087330938C5AE1CE4FFA4ABAF1C'
    
_lr_action_items = {'BSYMBOL2':([1,4,5,6,8,9,15,16,18,19,20,21,22,23,24,26,],[-14,10,-11,-13,10,10,-12,10,-10,-4,10,10,10,-5,-9,10,]),'WORD':([0,2,3,7,10,11,12,13,14,25,],[1,1,1,1,1,1,1,1,1,1,]),'RBRACKET':([1,5,6,9,15,16,17,18,19,20,21,22,23,24,26,],[-14,-11,-13,-6,-12,-7,24,-10,-4,-2,-3,-1,-5,-9,-8,]),'LPAREN':([0,2,3,7,10,11,12,13,14,25,],[2,2,2,2,2,2,2,2,2,2,]),'RPAREN':([1,5,6,8,9,15,18,19,20,21,22,23,24,],[-14,-11,-13,18,-6,-12,-10,-4,-2,-3,-1,-5,-9,]),'MINUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,],[3,-14,3,3,11,-11,-13,3,11,-6,3,3,3,3,3,-12,11,-10,-4,-2,-3,11,-5,-9,3,11,]),'COMMA':([1,5,6,9,15,16,17,18,19,20,21,22,23,24,26,],[-14,-11,-13,-6,-12,-7,25,-10,-4,-2,-3,-1,-5,-9,-8,]),'BSYMBOL3':([1,4,5,6,8,9,15,16,18,19,20,21,22,23,24,26,],[-14,14,-11,-13,14,14,-12,14,-10,14,14,14,14,14,-9,14,]),'DEGREE':([0,2,3,5,7,10,11,12,13,14,25,],[6,6,6,15,6,6,6,6,6,6,6,]),'BSYMBOL0':([1,4,5,6,8,9,15,16,18,19,20,21,22,23,24,26,],[-14,13,-11,-13,13,-6,-12,13,-10,-4,-2,-3,None,-5,-9,13,]),'LBRACKET':([1,],[7,]),'$end':([1,4,5,6,9,15,18,19,20,21,22,23,24,],[-14,0,-11,-13,-6,-12,-10,-4,-2,-3,-1,-5,-9,]),'BSYMBOL1':([1,4,5,6,8,9,15,16,18,19,20,21,22,23,24,26,],[-14,12,-11,-13,12,-6,-12,12,-10,-4,-2,-3,12,-5,-9,12,]),'NUMBER':([0,2,3,7,10,11,12,13,14,25,],[5,5,5,5,5,5,5,5,5,5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,3,7,10,11,12,13,14,25,],[4,8,9,16,19,20,21,22,23,26,]),'nakedlist':([7,],[17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression BSYMBOL0 expression','expression',3,'p_expression_b0','ggb_expr.py',98),
  ('expression -> expression MINUS expression','expression',3,'p_expression_b0','ggb_expr.py',99),
  ('expression -> expression BSYMBOL1 expression','expression',3,'p_expression_b0','ggb_expr.py',100),
  ('expression -> expression BSYMBOL2 expression','expression',3,'p_expression_b0','ggb_expr.py',101),
  ('expression -> expression BSYMBOL3 expression','expression',3,'p_expression_b0','ggb_expr.py',102),
  ('expression -> MINUS expression','expression',2,'p_expr_uminus','ggb_expr.py',107),
  ('nakedlist -> expression','nakedlist',1,'p_nakedlist_expr','ggb_expr.py',111),
  ('nakedlist -> nakedlist COMMA expression','nakedlist',3,'p_nakedlist_comma','ggb_expr.py',114),
  ('expression -> WORD LBRACKET nakedlist RBRACKET','expression',4,'p_expression_function','ggb_expr.py',118),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','ggb_expr.py',121),
  ('expression -> NUMBER','expression',1,'p_expression_const','ggb_expr.py',125),
  ('expression -> NUMBER DEGREE','expression',2,'p_expression_const_angle','ggb_expr.py',128),
  ('expression -> DEGREE','expression',1,'p_expression_one_degree','ggb_expr.py',131),
  ('expression -> WORD','expression',1,'p_expression_var','ggb_expr.py',134),
]
